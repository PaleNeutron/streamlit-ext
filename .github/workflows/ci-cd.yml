# This single workflow handles both testing and publishing.
# 1. It runs tests for pushes and pull requests to the master branch.
# 2. It runs tests AND publishes the package to PyPI when a version tag is pushed.

name: Python CI/CD

# Controls when the workflow will run.
on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*.*.*'  # This will trigger the workflow for tags like v1.0, v2.3.4
  pull_request:
    branches: [ "master" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This job runs your tests against multiple Python versions.
  # It will run for every push and pull request to 'master', and on tag pushes.
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install ".[dev, test]"
    - name: Lint with ruff
      run: |
        # We recommend failing the CI job if linting issues are found.
        ruff check .
    - name: Test with pytest
      run: |
        pytest

  # This job publishes the package to PyPI.
  publish:
    name: Publish to PyPI
    # This job will only run after the 'test' job has successfully completed.
    needs: test
    # This is the crucial condition: the job only runs on a push event to a ref that starts with 'refs/tags/'.
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install build dependencies
      run: python -m pip install --upgrade pip build
    - name: Build package
      run: python -m build
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        # Use a token stored in your repository's secrets.
        password: ${{ secrets.PYPI_API_TOKEN }}